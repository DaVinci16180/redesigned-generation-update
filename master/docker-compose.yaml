services:
  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
    ports:
      - "9090:9090"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana-oss:8.5.2
    pull_policy: always
    container_name: grafana
    restart: unless-stopped
    user: root
    ports:
      - "3000:3000" # access grafana url
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=http://localhost:3000
      # Enabled for logging
      - GF_LOG_MODE=console file
      - GF_LOG_FILTERS=alerting.notifier.slack:debug alertmanager:debug ngalert:debug

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"  # Expondo a porta 6379 para acesso externo
    networks:
      - redis_network
    volumes:
      - redis_data:/data  # Persistência de dados no volume local
    restart: always

networks:
  redis_network:
    driver: bridge  # Rede interna do Docker para comunicação entre contêineres e host

volumes:
  redis_data:
    driver: local  # Volume para persistir os dados do Redis no host